
32_25_2017.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000f4  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000030  00000000  00000000  00000124  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000000df  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000b6  00000000  00000000  00000233  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000f2  00000000  00000000  000002e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000044  00000000  00000000  000003dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000014e  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000020  00000000  00000000  0000056e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 41 00 	call	0x82	; 0x82 <main>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <SPI_MasterInit>:
 //-------------------------------------------------------------------------------------------------


 void SPI_MasterInit(void)
 {
	 DDRB = (1<<DDB5)|(0<<DDB6)|(1<<DDB7)|(1<<DDB4);
  6c:	80 eb       	ldi	r24, 0xB0	; 176
  6e:	87 bb       	out	0x17, r24	; 23
	 SPCR = (1<<SPE)|(1<<MSTR);
  70:	80 e5       	ldi	r24, 0x50	; 80
  72:	8d b9       	out	0x0d, r24	; 13
  74:	08 95       	ret

00000076 <spi_readwrite>:
 }

 void spi_readwrite(unsigned char value)
 {
	 cl_l;
  76:	c1 98       	cbi	0x18, 1	; 24
	 SPDR = value;
  78:	8f b9       	out	0x0f, r24	; 15
	 
	 while(!(SPSR & (1<<SPIF)));
  7a:	77 9b       	sbis	0x0e, 7	; 14
  7c:	fe cf       	rjmp	.-4      	; 0x7a <spi_readwrite+0x4>
	 cl_h;
  7e:	c1 9a       	sbi	0x18, 1	; 24
  80:	08 95       	ret

00000082 <main>:

 //-------------------------------------------------------------------------------------------------

 int main(void)
 {
	 DDRB |=(1<<PINB0) |(1<<PINB1) |(1<<PINB2);
  82:	87 b3       	in	r24, 0x17	; 23
  84:	87 60       	ori	r24, 0x07	; 7
  86:	87 bb       	out	0x17, r24	; 23
	 SPI_MasterInit();
  88:	0e 94 36 00 	call	0x6c	; 0x6c <SPI_MasterInit>
	 while(1)
	 {
		 PORTB|=(4<<0);
  8c:	c2 9a       	sbi	0x18, 2	; 24
		//PORTB |=(PINB4);
		cs_l;
  8e:	c2 98       	cbi	0x18, 2	; 24
		 spi_readwrite(0b11110000);
  90:	80 ef       	ldi	r24, 0xF0	; 240
  92:	0e 94 3b 00 	call	0x76	; 0x76 <spi_readwrite>
		 cs_h;
  96:	c2 9a       	sbi	0x18, 2	; 24
		 //PORTB &=~(PINB4);
		PORTB|=(4<<1);
  98:	c3 9a       	sbi	0x18, 3	; 24
  9a:	f8 cf       	rjmp	.-16     	; 0x8c <main+0xa>

0000009c <_exit>:
  9c:	f8 94       	cli

0000009e <__stop_program>:
  9e:	ff cf       	rjmp	.-2      	; 0x9e <__stop_program>
