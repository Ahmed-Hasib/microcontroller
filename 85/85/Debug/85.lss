
85.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000003c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000090  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000000c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000087  00000000  00000000  000000e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000053  00000000  00000000  00000167  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000b2  00000000  00000000  000001ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  0000026c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000113  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  000003a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	05 c0       	rjmp	.+10     	; 0x38 <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:



int main(void)
{
	DDRB |=(1<<PINB0);
  30:	b8 9a       	sbi	0x17, 0	; 23
    while(1)
    {
		PORTB |=(1<<PINB0);
  32:	c0 9a       	sbi	0x18, 0	; 24
		
		PORTB &=~(1<<PINB0);
  34:	c0 98       	cbi	0x18, 0	; 24
  36:	fd cf       	rjmp	.-6      	; 0x32 <main+0x2>

00000038 <_exit>:
  38:	f8 94       	cli

0000003a <__stop_program>:
  3a:	ff cf       	rjmp	.-2      	; 0x3a <__stop_program>
