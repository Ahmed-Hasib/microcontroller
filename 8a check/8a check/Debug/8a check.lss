
8a check.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  0000015a  000001ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001de  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000028  00000000  00000000  0000020e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001e5  00000000  00000000  00000236  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000014c  00000000  00000000  0000041b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000019c  00000000  00000000  00000567  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000054  00000000  00000000  00000704  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000188  00000000  00000000  00000758  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000002d4  00000000  00000000  000008e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000058  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e5       	ldi	r30, 0x5A	; 90
  3a:	f1 e0       	ldi	r31, 0x01	; 1
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 37       	cpi	r26, 0x70	; 112
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	69 d0       	rcall	.+210    	; 0x11c <main>
  4a:	85 c0       	rjmp	.+266    	; 0x156 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <print_led>:
#define p7 PIND6
#define p8 PIND7


void print_led(int a[])
{
  4e:	1f 93       	push	r17
  50:	cf 93       	push	r28
  52:	df 93       	push	r29
  54:	fc 01       	movw	r30, r24
  56:	81 e0       	ldi	r24, 0x01	; 1
  58:	90 e0       	ldi	r25, 0x00	; 0
  5a:	40 e0       	ldi	r20, 0x00	; 0
  5c:	50 e0       	ldi	r21, 0x00	; 0
		else if(tmp==4)
		pd =16;
		else if(tmp==5)
		pd =32;
		else if(tmp==6)
		pd =64;
  5e:	10 e4       	ldi	r17, 0x40	; 64
		else if(tmp==3)
		pd =8;
		else if(tmp==4)
		pd =16;
		else if(tmp==5)
		pd =32;
  60:	d0 e2       	ldi	r29, 0x20	; 32
		else if(tmp==2)
		pd =4;
		else if(tmp==3)
		pd =8;
		else if(tmp==4)
		pd =16;
  62:	c0 e1       	ldi	r28, 0x10	; 16
		else if(tmp==1)
		pd =2;
		else if(tmp==2)
		pd =4;
		else if(tmp==3)
		pd =8;
  64:	b8 e0       	ldi	r27, 0x08	; 8
		if(tmp==0)
		pd =1;
		else if(tmp==1)
		pd =2;
		else if(tmp==2)
		pd =4;
  66:	a4 e0       	ldi	r26, 0x04	; 4
		tmp=i;

		if(tmp==0)
		pd =1;
		else if(tmp==1)
		pd =2;
  68:	72 e0       	ldi	r23, 0x02	; 2
		val=a[i];
		pb=val;
		tmp=i;

		if(tmp==0)
		pd =1;
  6a:	61 e0       	ldi	r22, 0x01	; 1
  6c:	03 c0       	rjmp	.+6      	; 0x74 <print_led+0x26>
  6e:	4f 5f       	subi	r20, 0xFF	; 255
  70:	5f 4f       	sbci	r21, 0xFF	; 255
  72:	01 96       	adiw	r24, 0x01	; 1
	
 
	for(i=0;i<8;i++)
	{
		
		val=a[i];
  74:	20 81       	ld	r18, Z
  76:	32 96       	adiw	r30, 0x02	; 2
		pb=val;
  78:	28 bb       	out	0x18, r18	; 24
		tmp=i;

		if(tmp==0)
  7a:	41 15       	cp	r20, r1
  7c:	51 05       	cpc	r21, r1
  7e:	11 f4       	brne	.+4      	; 0x84 <print_led+0x36>
		pd =1;
  80:	62 bb       	out	0x12, r22	; 18
  82:	3d c0       	rjmp	.+122    	; 0xfe <print_led+0xb0>
		else if(tmp==1)
  84:	41 30       	cpi	r20, 0x01	; 1
  86:	51 05       	cpc	r21, r1
  88:	11 f4       	brne	.+4      	; 0x8e <print_led+0x40>
		pd =2;
  8a:	72 bb       	out	0x12, r23	; 18
  8c:	38 c0       	rjmp	.+112    	; 0xfe <print_led+0xb0>
		else if(tmp==2)
  8e:	42 30       	cpi	r20, 0x02	; 2
  90:	51 05       	cpc	r21, r1
  92:	11 f4       	brne	.+4      	; 0x98 <print_led+0x4a>
		pd =4;
  94:	a2 bb       	out	0x12, r26	; 18
  96:	33 c0       	rjmp	.+102    	; 0xfe <print_led+0xb0>
		else if(tmp==3)
  98:	43 30       	cpi	r20, 0x03	; 3
  9a:	51 05       	cpc	r21, r1
  9c:	11 f4       	brne	.+4      	; 0xa2 <print_led+0x54>
		pd =8;
  9e:	b2 bb       	out	0x12, r27	; 18
  a0:	2e c0       	rjmp	.+92     	; 0xfe <print_led+0xb0>
		else if(tmp==4)
  a2:	44 30       	cpi	r20, 0x04	; 4
  a4:	51 05       	cpc	r21, r1
  a6:	11 f4       	brne	.+4      	; 0xac <print_led+0x5e>
		pd =16;
  a8:	c2 bb       	out	0x12, r28	; 18
  aa:	29 c0       	rjmp	.+82     	; 0xfe <print_led+0xb0>
		else if(tmp==5)
  ac:	45 30       	cpi	r20, 0x05	; 5
  ae:	51 05       	cpc	r21, r1
  b0:	11 f4       	brne	.+4      	; 0xb6 <print_led+0x68>
		pd =32;
  b2:	d2 bb       	out	0x12, r29	; 18
  b4:	24 c0       	rjmp	.+72     	; 0xfe <print_led+0xb0>
		else if(tmp==6)
  b6:	46 30       	cpi	r20, 0x06	; 6
  b8:	51 05       	cpc	r21, r1
  ba:	11 f4       	brne	.+4      	; 0xc0 <print_led+0x72>
		pd =64;
  bc:	12 bb       	out	0x12, r17	; 18
  be:	1f c0       	rjmp	.+62     	; 0xfe <print_led+0xb0>
		else if(tmp==7)
  c0:	47 30       	cpi	r20, 0x07	; 7
  c2:	51 05       	cpc	r21, r1
  c4:	69 f4       	brne	.+26     	; 0xe0 <print_led+0x92>
		pd =128;
  c6:	80 e8       	ldi	r24, 0x80	; 128
  c8:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	26 ea       	ldi	r18, 0xA6	; 166
  cc:	2a 95       	dec	r18
  ce:	f1 f7       	brne	.-4      	; 0xcc <print_led+0x7e>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <print_led+0x84>
		
		_delay_ms(.5);
		pb=0;
  d2:	18 ba       	out	0x18, r1	; 24
		pd=0;
  d4:	12 ba       	out	0x12, r1	; 18
  d6:	86 ea       	ldi	r24, 0xA6	; 166
  d8:	8a 95       	dec	r24
  da:	f1 f7       	brne	.-4      	; 0xd8 <print_led+0x8a>
  dc:	00 c0       	rjmp	.+0      	; 0xde <print_led+0x90>
  de:	1a c0       	rjmp	.+52     	; 0x114 <print_led+0xc6>
  e0:	26 ea       	ldi	r18, 0xA6	; 166
  e2:	2a 95       	dec	r18
  e4:	f1 f7       	brne	.-4      	; 0xe2 <print_led+0x94>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <print_led+0x9a>
		pd =64;
		else if(tmp==7)
		pd =128;
		
		_delay_ms(.5);
		pb=0;
  e8:	18 ba       	out	0x18, r1	; 24
		pd=0;
  ea:	12 ba       	out	0x12, r1	; 18
  ec:	26 ea       	ldi	r18, 0xA6	; 166
  ee:	2a 95       	dec	r18
  f0:	f1 f7       	brne	.-4      	; 0xee <print_led+0xa0>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <print_led+0xa6>
void print_led(int a[])
{
	int i=0,val=0,tmp=0;
	
 
	for(i=0;i<8;i++)
  f4:	88 30       	cpi	r24, 0x08	; 8
  f6:	91 05       	cpc	r25, r1
  f8:	0c f4       	brge	.+2      	; 0xfc <print_led+0xae>
  fa:	b9 cf       	rjmp	.-142    	; 0x6e <print_led+0x20>
  fc:	0b c0       	rjmp	.+22     	; 0x114 <print_led+0xc6>
  fe:	26 ea       	ldi	r18, 0xA6	; 166
 100:	2a 95       	dec	r18
 102:	f1 f7       	brne	.-4      	; 0x100 <print_led+0xb2>
 104:	00 c0       	rjmp	.+0      	; 0x106 <print_led+0xb8>
		pd =64;
		else if(tmp==7)
		pd =128;
		
		_delay_ms(.5);
		pb=0;
 106:	18 ba       	out	0x18, r1	; 24
		pd=0;
 108:	12 ba       	out	0x12, r1	; 18
 10a:	26 ea       	ldi	r18, 0xA6	; 166
 10c:	2a 95       	dec	r18
 10e:	f1 f7       	brne	.-4      	; 0x10c <print_led+0xbe>
 110:	00 c0       	rjmp	.+0      	; 0x112 <print_led+0xc4>
 112:	ad cf       	rjmp	.-166    	; 0x6e <print_led+0x20>
		_delay_ms(.5);
	}
 
	
}
 114:	df 91       	pop	r29
 116:	cf 91       	pop	r28
 118:	1f 91       	pop	r17
 11a:	08 95       	ret

0000011c <main>:

int main(void)
{
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	cd b7       	in	r28, 0x3d	; 61
 122:	de b7       	in	r29, 0x3e	; 62
 124:	60 97       	sbiw	r28, 0x10	; 16
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	f8 94       	cli
 12a:	de bf       	out	0x3e, r29	; 62
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	cd bf       	out	0x3d, r28	; 61
	
	db |=(1<<c1) |(1<<c2) |(1<<c3) |(1<<c4) |(1<<c5) |(1<<c6) |(1<<c7) |(1<<c8);
 130:	87 b3       	in	r24, 0x17	; 23
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	87 bb       	out	0x17, r24	; 23
	//pb |=(1<<c1) |(1<<c2) |(1<<c3) |(1<<c4) |(1<<c5) |(1<<c6)|(1<<c7) |(1<<c8);
	
	
	DDRD |=(1<<PIND0) |(1<<PIND1)  |(1<<PIND2)  |(1<<PIND3)  |(1<<PIND4)  |(1<<PIND5)  |(1<<PIND6)  |(1<<PIND7) ;
 136:	91 b3       	in	r25, 0x11	; 17
 138:	81 bb       	out	0x11, r24	; 17
   //PORTD |=(1<<PIND1);
    
    while(1)
    {
		   
	   int box[8]={255, 195, 165, 153, 153, 165, 195, 255};
 13a:	10 e1       	ldi	r17, 0x10	; 16
 13c:	e0 e6       	ldi	r30, 0x60	; 96
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	de 01       	movw	r26, r28
 142:	11 96       	adiw	r26, 0x01	; 1
 144:	81 2f       	mov	r24, r17
 146:	01 90       	ld	r0, Z+
 148:	0d 92       	st	X+, r0
 14a:	8a 95       	dec	r24
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0x2a>
	   int box1[8]={0, 126, 66, 66, 66, 66, 126, 0};
	   print_led(box);
 14e:	ce 01       	movw	r24, r28
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	7d df       	rcall	.-262    	; 0x4e <print_led>
 154:	f3 cf       	rjmp	.-26     	; 0x13c <main+0x20>

00000156 <_exit>:
 156:	f8 94       	cli

00000158 <__stop_program>:
 158:	ff cf       	rjmp	.-2      	; 0x158 <__stop_program>
