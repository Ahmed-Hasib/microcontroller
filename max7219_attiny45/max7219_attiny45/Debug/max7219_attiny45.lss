
max7219_attiny45.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000060  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000b4  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000000e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000115  00000000  00000000  00000104  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000d1  00000000  00000000  00000219  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000151  00000000  00000000  000002ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  0000043c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000188  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000004d  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000635  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	15 c0       	rjmp	.+42     	; 0x2e <__bad_interrupt>
   4:	14 c0       	rjmp	.+40     	; 0x2e <__bad_interrupt>
   6:	13 c0       	rjmp	.+38     	; 0x2e <__bad_interrupt>
   8:	12 c0       	rjmp	.+36     	; 0x2e <__bad_interrupt>
   a:	11 c0       	rjmp	.+34     	; 0x2e <__bad_interrupt>
   c:	10 c0       	rjmp	.+32     	; 0x2e <__bad_interrupt>
   e:	0f c0       	rjmp	.+30     	; 0x2e <__bad_interrupt>
  10:	0e c0       	rjmp	.+28     	; 0x2e <__bad_interrupt>
  12:	0d c0       	rjmp	.+26     	; 0x2e <__bad_interrupt>
  14:	0c c0       	rjmp	.+24     	; 0x2e <__bad_interrupt>
  16:	0b c0       	rjmp	.+22     	; 0x2e <__bad_interrupt>
  18:	0a c0       	rjmp	.+20     	; 0x2e <__bad_interrupt>
  1a:	09 c0       	rjmp	.+18     	; 0x2e <__bad_interrupt>
  1c:	08 c0       	rjmp	.+16     	; 0x2e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d1 e0       	ldi	r29, 0x01	; 1
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	02 d0       	rcall	.+4      	; 0x30 <main>
  2c:	17 c0       	rjmp	.+46     	; 0x5c <_exit>

0000002e <__bad_interrupt>:
  2e:	e8 cf       	rjmp	.-48     	; 0x0 <__vectors>

00000030 <main>:
 


int main(void)
{
	DDRB |=(1<<PINB0) |(1<<PINB1) |(1<<PINB2);
  30:	87 b3       	in	r24, 0x17	; 23
  32:	87 60       	ori	r24, 0x07	; 7
  34:	87 bb       	out	0x17, r24	; 23
	
	
	
    while(1)
    {
		cs_l;
  36:	38 e0       	ldi	r19, 0x08	; 8
  38:	20 e0       	ldi	r18, 0x00	; 0
  3a:	c2 98       	cbi	0x18, 2	; 24
  3c:	83 2f       	mov	r24, r19
  3e:	92 2f       	mov	r25, r18
		for(i=0;i<8;i++)
		{
			cl_l;
  40:	c1 98       	cbi	0x18, 1	; 24
			d_h;
  42:	c0 9a       	sbi	0x18, 0	; 24
			cl_h;
  44:	c1 9a       	sbi	0x18, 1	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  46:	e3 ef       	ldi	r30, 0xF3	; 243
  48:	f1 e0       	ldi	r31, 0x01	; 1
  4a:	31 97       	sbiw	r30, 0x01	; 1
  4c:	f1 f7       	brne	.-4      	; 0x4a <__SREG__+0xb>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <__SREG__+0x11>
  50:	00 00       	nop
  52:	01 97       	sbiw	r24, 0x01	; 1
	
	
    while(1)
    {
		cs_l;
		for(i=0;i<8;i++)
  54:	00 97       	sbiw	r24, 0x00	; 0
  56:	a1 f7       	brne	.-24     	; 0x40 <__SREG__+0x1>
			d_h;
			cl_h;
			_delay_ms(2);
			
		}
		cs_h;
  58:	c2 9a       	sbi	0x18, 2	; 24
        //TODO:: Please write your application code 
    }
  5a:	ef cf       	rjmp	.-34     	; 0x3a <main+0xa>

0000005c <_exit>:
  5c:	f8 94       	cli

0000005e <__stop_program>:
  5e:	ff cf       	rjmp	.-2      	; 0x5e <__stop_program>
